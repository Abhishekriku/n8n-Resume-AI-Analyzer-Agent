{
  "name": "Resume AI Analyzer",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "q": "has:attachment filename:pdf resume"
        },
        "options": {
          "dataPropertyAttachmentsPrefixName": "cv",
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        -208,
        -32
      ],
      "id": "7452c312-4fa6-4186-bd9e-16e3766e884d",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "sDz6RroY8wuCtGWm",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "inputDataFieldName": "cv0",
        "name": "={{ $json.from.value[0].name }}",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1N5m-xzZaS8MAnvN9rtqFARMoGPrGYPX3",
          "mode": "list",
          "cachedResultName": "Job Resume",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1N5m-xzZaS8MAnvN9rtqFARMoGPrGYPX3"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        0,
        -32
      ],
      "id": "d98360c1-e52e-40dd-ab7c-ef240f01fbdf",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "3cATft7dB1Zsom46",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        208,
        -32
      ],
      "id": "a7b857d5-9e94-4a5e-a980-6964c63834cb",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "3cATft7dB1Zsom46",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        416,
        -32
      ],
      "id": "75402b2f-d894-4b0c-b9b7-c96d013f9fbc",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "schemaType": "manual",
        "inputSchema": " {\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"phone_number\": {\n      \"type\": \"string\",\n      \"pattern\": \"^(\\\\+\\\\d{1,3}[- ]?)?\\\\d{10}$\"\n    }\n  },\n  \"required\": [\"name\", \"email\", \"phone_number\"]\n }",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        624,
        -32
      ],
      "id": "5fbb7f7c-da49-4a50-8c38-698a1e521ded",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        816,
        208
      ],
      "id": "c7ce985d-1b44-40ec-b6bd-10e22e2a921b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "esYu7Jvzs9VrijRq",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "= Resume:  {{ $('Extract from File').item.json.text }}",
        "options": {
          "systemMessage": "=Enter prompt here"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        976,
        -32
      ],
      "id": "ae80d3eb-bf71-4c70-aef7-7f212275a2ae",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f064af6-18f9-430c-9655-04b0862a5b7a",
              "name": "content",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1328,
        -32
      ],
      "id": "c1983305-1b26-4533-a5a1-ae8db66546e1",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "// 1) Read input\nconst inputData = $input.item.json.content || \"\";\n \n// 2) Helper: escape regex specials\nconst esc = (s) => String(s).replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n \n// 3) Helper: get block that starts at a **Header** and ends at the next **Header** (or EOF)\nconst getBlock = (text, label) => {\n  const l = esc(label);\n  const re = new RegExp(\n    // start at \"**Label**\" OR \"**Label:**\" (allow spaces)\n    `\\\\*\\\\*\\\\s*${l}\\\\s*:??\\\\s*\\\\*\\\\*\\\\s*\\\\n?` +\n    // capture everything lazily...\n    `([\\\\s\\\\S]*?)` +\n    // ...until the next \"**Anything**\" line or end of string\n    `(?=\\\\n\\\\s*\\\\*\\\\*[^\\\\n]+\\\\*\\\\*\\\\s*(?:\\\\n|$)|$)`,\n    \"i\"\n  );\n  const m = re.exec(text);\n  return m ? m[1].trim() : null;\n};\n \n// 4) Pull simple sections (accept common label variants)\nconst educationalQualifications = getBlock(inputData, \"Educational Qualifications\");\nconst jobHistory               = getBlock(inputData, \"Job History\");\nconst skillSet                 = getBlock(inputData, \"Skill Set\") \n                              || getBlock(inputData, \"Skills\") \n                              || getBlock(inputData, \"Skillset\");\n \n// 5) Evaluation block, then extract score & justification\nconst evaluationBlock = getBlock(inputData, \"Evaluation\");\n \nlet score = null;\nlet justification = null;\n \nif (evaluationBlock) {\n  // e.g. \"- **Relevance Score:** 9/10\" or \"- **Score:** 9/10\" or \"Score 9/10\"\n const scoreMatch = /(?:^|\\n)\\s*[-–—*]?\\s*\\**\\s*(?:Relevance\\s+)?Score\\**\\s*(?::|–|-)?\\s*(\\d{1,2})\\s*(?:\\/|out\\s+of|of)\\s*10\\b/i\n  .exec(evaluationBlock);\nif (scoreMatch) score = scoreMatch[1];\n \n  // e.g. \"- **Justification:** <text>\" (grab rest of block)\n  const justMatch = /(?:^|\\n)\\s*[-*]?\\s*\\**\\s*Justification\\s*\\**\\s*:?\\s*([\\s\\S]+)$/i\n    .exec(evaluationBlock);\n  if (justMatch) justification = justMatch[1].trim();\n}\n \n// 6) Return tidy JSON for the next node/columns\nreturn [\n  {\n    educationalQualifications,\n    jobHistory,\n    skillSet,\n    score,\n    justification\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1536,
        -32
      ],
      "id": "d7cc3ad5-8b06-48a4-a64d-601449360c25",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1r-QfJgOFz_iy_ZhCbIbBZ9qlSblkgHd9wzJFhX1XCMc",
          "mode": "list",
          "cachedResultName": "List of candidates",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1r-QfJgOFz_iy_ZhCbIbBZ9qlSblkgHd9wzJFhX1XCMc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1r-QfJgOFz_iy_ZhCbIbBZ9qlSblkgHd9wzJFhX1XCMc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name": "={{ $('Information Extractor').item.json.output.name }}",
            "Email": "={{ $('Information Extractor').item.json.output.email }}",
            "Number": "={{ $('Information Extractor').item.json.output.phone_number }}",
            "Skill Set": "={{ $json.skillSet }}",
            "Qualifications": "={{ $json.educationalQualifications }}",
            "Job History": "={{ $json.jobHistory }}",
            "Score": "={{ $json.score }}",
            "Justification": "={{ $json.justification }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Number",
              "displayName": "Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Skill Set",
              "displayName": "Skill Set",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qualifications",
              "displayName": "Qualifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job History",
              "displayName": "Job History",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Justification",
              "displayName": "Justification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1744,
        -32
      ],
      "id": "2133a2a8-f062-486b-aff6-61922082666d",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "hjXravbTvSqmbwPz",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "655df1d4-8135-4c49-be02-6a165dc13659",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bef3ed5f0e279332fdab63d7455bdfab081a16b2a924c8a9df0bfd248977890b"
  },
  "id": "siSSET2qapUSDwO2",
  "tags": []
}